name: CD staging environment


on:
  push:
    branches:
      - "staging"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ secrets.DEV_ECR_REGISTRY }}
          ECR_REPOSITORY: selleraxis-stage
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . \
            --build-arg ENV="dev" \
            --build-arg SECRET_KEY="${{ secrets.SECRET_KEY }}" \
            --build-arg DB_NAME="${{ secrets.STAGE_DB_NAME }}" \
            --build-arg DB_USERNAME="${{ secrets.STAGE_DB_USERNAME }}" \
            --build-arg DB_PASSWORD="${{ secrets.STAGE_DB_PASSWORD }}" \
            --build-arg DB_HOST="${{ secrets.STAGE_DB_HOST }}" \
            --build-arg CORS_ALLOWED_ORIGINS="${{ secrets.STAGE_CORS_ALLOWED_ORIGINS }}" \
            --build-arg HOST="${{ secrets.STAGE_HOST }}" \
            --build-arg BUCKET_NAME="${{ secrets.STAGE_BUCKET_NAME }}" \
            --build-arg SENDER_EMAIL="${{ secrets.STAGE_SENDER_EMAIL }}" \
            --build-arg UPDATE_INVENTORY_SQS_NAME="${{ secrets.STAGE_UPDATE_INVENTORY_SQS_NAME}}" \
            --build-arg UPDATE_RETAILER_INVENTORY_SQS_NAME="${{ secrets.STAGE_UPDATE_RETAILER_INVENTORY_SQS_NAME }}" \
            --build-arg WEBSITE_URL="${{ secrets.STAGE_WEBSITE_URL }}" \
            --build-arg DEFAULT_FEDEX_CLIENT_ID=${{ secrets.DEFAULT_FEDEX_CLIENT_ID }} \
            --build-arg DEFAULT_FEDEX_CLIENT_SECRET=${{ secrets.DEFAULT_FEDEX_CLIENT_SECRET }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ./cicd/deploy/aws-ecs/task-definition-staging.json
          container-name: backend-api-container-stage
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: selleraxis-api-service-stage
          cluster: selleraxis-backend-stage
