# Generated by Django 3.2.14 on 2023-11-27 02:04

from django.db import migrations, models
import django.db.models.deletion


def sync_deleted_at(apps, schema_editor):
    # get all order
    Organization = apps.get_model("organizations", "Organization")
    list_org = Organization.objects.all().prefetch_related("roles")
    list_resolve = []
    for organization in list_org:
        if organization.id not in list_resolve:
            sandbox_organization = organization.sandbox_organization
            if sandbox_organization is not None:
                if sandbox_organization.id not in list_resolve:
                    list_resolve.append(organization.id)
                    list_resolve.append(sandbox_organization.id)
                    if organization.deleted_at is not None:
                        sandbox_organization.deleted_at = organization.deleted_at
                        sandbox_organization.save()
            else:
                prod_organization = organization.prod_organization
                if prod_organization is not None:
                    if prod_organization.id not in list_resolve:
                        list_resolve.append(organization.id)
                        list_resolve.append(prod_organization.id)
                        if organization.deleted_at is not None:
                            prod_organization.deleted_at = organization.deleted_at
                            prod_organization.save()


class Migration(migrations.Migration):
    dependencies = [
        ("organizations", "0016_organization_sync_is_sandbox_field"),
    ]

    operations = [
        migrations.RunPython(sync_deleted_at),
    ]
