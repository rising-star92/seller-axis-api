# Generated by Django 3.2.14 on 2023-08-07 03:42

from django.db import migrations

from selleraxis.service_api.models import ServiceAPI, ServiceAPIAction
from selleraxis.services.models import Services, ServiceType


def create_default_ups_service(apps, schema_editor):
    service = Services(
        name="UPS",
        type=ServiceType.SHIPPING,
        general_client_id="",
        general_client_secret="",
    )
    service.save()

    # FedEx auth API detail
    ups_auth_sandbox_url = "https://wwwcie.ups.com/security/v1/oauth/token"

    ups_auth_production_url = "https://wwwcie.ups.com/security/v1/oauth/token"

    ups_auth_method = "POST"

    ups_auth_header = """{
        "Authorization": "Basic {{basic_auth}}",
        "Content-Type": "application/x-www-form-urlencoded",
        "Accept": "application/json",
        "x-merchant-id": "{{client_id}}"
    }"""

    ups_auth_body = """{
        "grant_type": "client_credentials"
    }"""

    ups_auth_response = """{
        "access_token": "{{access_token}}"
    }"""

    ServiceAPI(
        action=ServiceAPIAction.LOGIN,
        sandbox_url=ups_auth_sandbox_url,
        production_url=ups_auth_production_url,
        method=ups_auth_method,
        body=ups_auth_body,
        response=ups_auth_response,
        header=ups_auth_header,
        service=service,
    ).save()

    # FedEx address validation API detail
    ups_validate_address_sandbox_url = (
        "https://wwwcie.ups.com/api/addressvalidation/v1/1"
    )

    ups_validate_address_production_url = (
        "https://wwwcie.ups.com/api/addressvalidation/v1/1"
    )

    ups_validate_address_method = "POST"

    ups_validate_address_header = """{
        "Authorization": "Bearer {{access_token}}",
        "Content-Type": "application/json",
        "Accept": "application/json"
    }"""

    ups_validate_address_body = """{
        "XAVRequest": {
            "AddressKeyFormat": {
                "ConsigneeName": "",
                "AttentionName": "",
                "BuildingName": "",
                "AddressLine": [
                    "{{address_1}}",
                    "{{address_2}}"
                ],
                "Region": "{{city}},{{state}},{{postal_code}}",
                "PoliticalDivision2": "{{city}}",
                "PoliticalDivision1": "{{state}}",
                {% set postal_code_list = postal_code.split('-') %}
                "PostcodePrimaryLow": {% if postal_code_list | length >= 1 %}
                    "{{postal_code_list[0]}}"
                {% else %}
                    ""
                {% endif %},
                "PostcodeExtendedLow": {% if postal_code_list | length >= 2 %}
                    "{{postal_code_list[1]}}"
                {% else %}
                    ""
                {% endif %},
                "Urbanization": "",
                "CountryCode": "{{country}}"
            }
        }
    }"""

    ups_validate_address_response = """{
        "status": "{{XAVResponse.Response.ResponseStatus.Description}}"
    }"""

    ServiceAPI(
        action=ServiceAPIAction.ADDRESS_VALIDATION,
        sandbox_url=ups_validate_address_sandbox_url,
        production_url=ups_validate_address_production_url,
        method=ups_validate_address_method,
        body=ups_validate_address_body,
        response=ups_validate_address_response,
        header=ups_validate_address_header,
        service=service,
    ).save()


class Migration(migrations.Migration):
    dependencies = [
        ("service_api", "0005_auto_20230728_1324"),
    ]

    operations = [migrations.RunPython(create_default_ups_service)]
