# Generated by Django 3.2.14 on 2023-11-28 07:15

from django.db import migrations, models

from selleraxis.retailer_purchase_orders.models import QueueStatus
from selleraxis.shipments.models import ShipmentStatus


def recheck_status(apps, schema_editor):
    # get all order
    RetailerPurchaseOrder = apps.get_model(
        "retailer_purchase_orders", "RetailerPurchaseOrder"
    )
    list_order = RetailerPurchaseOrder.objects.all()

    # get all order package
    OrderPackage = apps.get_model("order_package", "OrderPackage")
    list_order_package = OrderPackage.objects.all()

    # get all shipment
    Shipment = apps.get_model("shipments", "Shipment")
    list_shipment = Shipment.objects.all()
    list_package_id_shipped = []
    for shipment_item in list_shipment:
        if shipment_item.package is not None:
            list_package_id_shipped.append(shipment_item.package.id)

    for order in list_order:

        # get list package shipped of order
        list_package_for_order = list_order_package.filter(order__id=order.id)
        list_shipment_for_order = list_shipment.filter(
            package__id__in=[package.id for package in list_package_for_order]
        )

        if order.status.upper() == QueueStatus.Invoiced.value.upper():
            Shipment.objects.filter(
                id__in=[shipment.id for shipment in list_shipment_for_order],
                status=ShipmentStatus.CREATED,
            ).update(status=ShipmentStatus.SUBMITTED)


class Migration(migrations.Migration):

    dependencies = [
        ("shipments", "0012_update_shipment_status"),
    ]

    operations = [
        migrations.RunPython(recheck_status),
    ]
